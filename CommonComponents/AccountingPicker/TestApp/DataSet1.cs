//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace TestApp {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSet1 : DataSet {
        
        private GL_JOURNAL_HEADERSDataTable tableGL_JOURNAL_HEADERS;
        
        public DataSet1() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSet1(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GL_JOURNAL_HEADERS"] != null)) {
                    this.Tables.Add(new GL_JOURNAL_HEADERSDataTable(ds.Tables["GL_JOURNAL_HEADERS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GL_JOURNAL_HEADERSDataTable GL_JOURNAL_HEADERS {
            get {
                return this.tableGL_JOURNAL_HEADERS;
            }
        }
        
        public override DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["GL_JOURNAL_HEADERS"] != null)) {
                this.Tables.Add(new GL_JOURNAL_HEADERSDataTable(ds.Tables["GL_JOURNAL_HEADERS"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableGL_JOURNAL_HEADERS = ((GL_JOURNAL_HEADERSDataTable)(this.Tables["GL_JOURNAL_HEADERS"]));
            if ((this.tableGL_JOURNAL_HEADERS != null)) {
                this.tableGL_JOURNAL_HEADERS.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet1.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableGL_JOURNAL_HEADERS = new GL_JOURNAL_HEADERSDataTable();
            this.Tables.Add(this.tableGL_JOURNAL_HEADERS);
        }
        
        private bool ShouldSerializeGL_JOURNAL_HEADERS() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void GL_JOURNAL_HEADERSRowChangeEventHandler(object sender, GL_JOURNAL_HEADERSRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GL_JOURNAL_HEADERSDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnJOURNAL_ID;
            
            private DataColumn columnJOURNAL_NUMBER;
            
            private DataColumn columnGL_YEAR;
            
            private DataColumn columnPERIOD;
            
            private DataColumn columnMODULE;
            
            private DataColumn columnTYPE;
            
            private DataColumn columnTRANSACTION_DATE;
            
            private DataColumn columnREFERENCE;
            
            private DataColumn columnTOTAL_DEBITS;
            
            private DataColumn columnTOTAL_CREDITS;
            
            private DataColumn columnPRINTED;
            
            private DataColumn columnREVERSED;
            
            private DataColumn columnCREATED_BY;
            
            private DataColumn columnSTATUS;
            
            private DataColumn columnNEXT_LINE_NUMBER;
            
            private DataColumn columnOPERATOR;
            
            private DataColumn columnDATE_SAVED;
            
            private DataColumn columnEXPIRE_PERIOD;
            
            private DataColumn columnEXPIRE_YEAR;
            
            private DataColumn columnF9_UPDATED;
            
            internal GL_JOURNAL_HEADERSDataTable() : 
                    base("GL_JOURNAL_HEADERS") {
                this.InitClass();
            }
            
            internal GL_JOURNAL_HEADERSDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn JOURNAL_IDColumn {
                get {
                    return this.columnJOURNAL_ID;
                }
            }
            
            internal DataColumn JOURNAL_NUMBERColumn {
                get {
                    return this.columnJOURNAL_NUMBER;
                }
            }
            
            internal DataColumn GL_YEARColumn {
                get {
                    return this.columnGL_YEAR;
                }
            }
            
            internal DataColumn PERIODColumn {
                get {
                    return this.columnPERIOD;
                }
            }
            
            internal DataColumn MODULEColumn {
                get {
                    return this.columnMODULE;
                }
            }
            
            internal DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            internal DataColumn TRANSACTION_DATEColumn {
                get {
                    return this.columnTRANSACTION_DATE;
                }
            }
            
            internal DataColumn REFERENCEColumn {
                get {
                    return this.columnREFERENCE;
                }
            }
            
            internal DataColumn TOTAL_DEBITSColumn {
                get {
                    return this.columnTOTAL_DEBITS;
                }
            }
            
            internal DataColumn TOTAL_CREDITSColumn {
                get {
                    return this.columnTOTAL_CREDITS;
                }
            }
            
            internal DataColumn PRINTEDColumn {
                get {
                    return this.columnPRINTED;
                }
            }
            
            internal DataColumn REVERSEDColumn {
                get {
                    return this.columnREVERSED;
                }
            }
            
            internal DataColumn CREATED_BYColumn {
                get {
                    return this.columnCREATED_BY;
                }
            }
            
            internal DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            internal DataColumn NEXT_LINE_NUMBERColumn {
                get {
                    return this.columnNEXT_LINE_NUMBER;
                }
            }
            
            internal DataColumn OPERATORColumn {
                get {
                    return this.columnOPERATOR;
                }
            }
            
            internal DataColumn DATE_SAVEDColumn {
                get {
                    return this.columnDATE_SAVED;
                }
            }
            
            internal DataColumn EXPIRE_PERIODColumn {
                get {
                    return this.columnEXPIRE_PERIOD;
                }
            }
            
            internal DataColumn EXPIRE_YEARColumn {
                get {
                    return this.columnEXPIRE_YEAR;
                }
            }
            
            internal DataColumn F9_UPDATEDColumn {
                get {
                    return this.columnF9_UPDATED;
                }
            }
            
            public GL_JOURNAL_HEADERSRow this[int index] {
                get {
                    return ((GL_JOURNAL_HEADERSRow)(this.Rows[index]));
                }
            }
            
            public event GL_JOURNAL_HEADERSRowChangeEventHandler GL_JOURNAL_HEADERSRowChanged;
            
            public event GL_JOURNAL_HEADERSRowChangeEventHandler GL_JOURNAL_HEADERSRowChanging;
            
            public event GL_JOURNAL_HEADERSRowChangeEventHandler GL_JOURNAL_HEADERSRowDeleted;
            
            public event GL_JOURNAL_HEADERSRowChangeEventHandler GL_JOURNAL_HEADERSRowDeleting;
            
            public void AddGL_JOURNAL_HEADERSRow(GL_JOURNAL_HEADERSRow row) {
                this.Rows.Add(row);
            }
            
            public GL_JOURNAL_HEADERSRow AddGL_JOURNAL_HEADERSRow(
                        int JOURNAL_ID, 
                        int JOURNAL_NUMBER, 
                        int GL_YEAR, 
                        int PERIOD, 
                        string MODULE, 
                        string TYPE, 
                        System.DateTime TRANSACTION_DATE, 
                        string REFERENCE, 
                        System.Decimal TOTAL_DEBITS, 
                        System.Decimal TOTAL_CREDITS, 
                        string PRINTED, 
                        string REVERSED, 
                        string CREATED_BY, 
                        string STATUS, 
                        int NEXT_LINE_NUMBER, 
                        string OPERATOR, 
                        System.DateTime DATE_SAVED, 
                        int EXPIRE_PERIOD, 
                        int EXPIRE_YEAR, 
                        string F9_UPDATED) {
                GL_JOURNAL_HEADERSRow rowGL_JOURNAL_HEADERSRow = ((GL_JOURNAL_HEADERSRow)(this.NewRow()));
                rowGL_JOURNAL_HEADERSRow.ItemArray = new object[] {
                        JOURNAL_ID,
                        JOURNAL_NUMBER,
                        GL_YEAR,
                        PERIOD,
                        MODULE,
                        TYPE,
                        TRANSACTION_DATE,
                        REFERENCE,
                        TOTAL_DEBITS,
                        TOTAL_CREDITS,
                        PRINTED,
                        REVERSED,
                        CREATED_BY,
                        STATUS,
                        NEXT_LINE_NUMBER,
                        OPERATOR,
                        DATE_SAVED,
                        EXPIRE_PERIOD,
                        EXPIRE_YEAR,
                        F9_UPDATED};
                this.Rows.Add(rowGL_JOURNAL_HEADERSRow);
                return rowGL_JOURNAL_HEADERSRow;
            }
            
            public GL_JOURNAL_HEADERSRow FindByJOURNAL_ID(int JOURNAL_ID) {
                return ((GL_JOURNAL_HEADERSRow)(this.Rows.Find(new object[] {
                            JOURNAL_ID})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GL_JOURNAL_HEADERSDataTable cln = ((GL_JOURNAL_HEADERSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GL_JOURNAL_HEADERSDataTable();
            }
            
            internal void InitVars() {
                this.columnJOURNAL_ID = this.Columns["JOURNAL_ID"];
                this.columnJOURNAL_NUMBER = this.Columns["JOURNAL_NUMBER"];
                this.columnGL_YEAR = this.Columns["GL_YEAR"];
                this.columnPERIOD = this.Columns["PERIOD"];
                this.columnMODULE = this.Columns["MODULE"];
                this.columnTYPE = this.Columns["TYPE"];
                this.columnTRANSACTION_DATE = this.Columns["TRANSACTION_DATE"];
                this.columnREFERENCE = this.Columns["REFERENCE"];
                this.columnTOTAL_DEBITS = this.Columns["TOTAL_DEBITS"];
                this.columnTOTAL_CREDITS = this.Columns["TOTAL_CREDITS"];
                this.columnPRINTED = this.Columns["PRINTED"];
                this.columnREVERSED = this.Columns["REVERSED"];
                this.columnCREATED_BY = this.Columns["CREATED_BY"];
                this.columnSTATUS = this.Columns["STATUS"];
                this.columnNEXT_LINE_NUMBER = this.Columns["NEXT_LINE_NUMBER"];
                this.columnOPERATOR = this.Columns["OPERATOR"];
                this.columnDATE_SAVED = this.Columns["DATE_SAVED"];
                this.columnEXPIRE_PERIOD = this.Columns["EXPIRE_PERIOD"];
                this.columnEXPIRE_YEAR = this.Columns["EXPIRE_YEAR"];
                this.columnF9_UPDATED = this.Columns["F9_UPDATED"];
            }
            
            private void InitClass() {
                this.columnJOURNAL_ID = new DataColumn("JOURNAL_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJOURNAL_ID);
                this.columnJOURNAL_NUMBER = new DataColumn("JOURNAL_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJOURNAL_NUMBER);
                this.columnGL_YEAR = new DataColumn("GL_YEAR", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGL_YEAR);
                this.columnPERIOD = new DataColumn("PERIOD", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPERIOD);
                this.columnMODULE = new DataColumn("MODULE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMODULE);
                this.columnTYPE = new DataColumn("TYPE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTYPE);
                this.columnTRANSACTION_DATE = new DataColumn("TRANSACTION_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTRANSACTION_DATE);
                this.columnREFERENCE = new DataColumn("REFERENCE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnREFERENCE);
                this.columnTOTAL_DEBITS = new DataColumn("TOTAL_DEBITS", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_DEBITS);
                this.columnTOTAL_CREDITS = new DataColumn("TOTAL_CREDITS", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTAL_CREDITS);
                this.columnPRINTED = new DataColumn("PRINTED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPRINTED);
                this.columnREVERSED = new DataColumn("REVERSED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnREVERSED);
                this.columnCREATED_BY = new DataColumn("CREATED_BY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCREATED_BY);
                this.columnSTATUS = new DataColumn("STATUS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTATUS);
                this.columnNEXT_LINE_NUMBER = new DataColumn("NEXT_LINE_NUMBER", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNEXT_LINE_NUMBER);
                this.columnOPERATOR = new DataColumn("OPERATOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOPERATOR);
                this.columnDATE_SAVED = new DataColumn("DATE_SAVED", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATE_SAVED);
                this.columnEXPIRE_PERIOD = new DataColumn("EXPIRE_PERIOD", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEXPIRE_PERIOD);
                this.columnEXPIRE_YEAR = new DataColumn("EXPIRE_YEAR", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEXPIRE_YEAR);
                this.columnF9_UPDATED = new DataColumn("F9_UPDATED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnF9_UPDATED);
                this.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[] {
                                this.columnJOURNAL_ID}, true));
                this.columnJOURNAL_ID.AllowDBNull = false;
                this.columnJOURNAL_ID.Unique = true;
                this.columnJOURNAL_NUMBER.AllowDBNull = false;
                this.columnGL_YEAR.AllowDBNull = false;
                this.columnPERIOD.AllowDBNull = false;
                this.columnMODULE.AllowDBNull = false;
                this.columnTYPE.AllowDBNull = false;
                this.columnTRANSACTION_DATE.AllowDBNull = false;
                this.columnTOTAL_DEBITS.AllowDBNull = false;
                this.columnTOTAL_CREDITS.AllowDBNull = false;
                this.columnPRINTED.AllowDBNull = false;
                this.columnREVERSED.AllowDBNull = false;
                this.columnCREATED_BY.AllowDBNull = false;
                this.columnSTATUS.AllowDBNull = false;
                this.columnNEXT_LINE_NUMBER.AllowDBNull = false;
            }
            
            public GL_JOURNAL_HEADERSRow NewGL_JOURNAL_HEADERSRow() {
                return ((GL_JOURNAL_HEADERSRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GL_JOURNAL_HEADERSRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GL_JOURNAL_HEADERSRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GL_JOURNAL_HEADERSRowChanged != null)) {
                    this.GL_JOURNAL_HEADERSRowChanged(this, new GL_JOURNAL_HEADERSRowChangeEvent(((GL_JOURNAL_HEADERSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GL_JOURNAL_HEADERSRowChanging != null)) {
                    this.GL_JOURNAL_HEADERSRowChanging(this, new GL_JOURNAL_HEADERSRowChangeEvent(((GL_JOURNAL_HEADERSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GL_JOURNAL_HEADERSRowDeleted != null)) {
                    this.GL_JOURNAL_HEADERSRowDeleted(this, new GL_JOURNAL_HEADERSRowChangeEvent(((GL_JOURNAL_HEADERSRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GL_JOURNAL_HEADERSRowDeleting != null)) {
                    this.GL_JOURNAL_HEADERSRowDeleting(this, new GL_JOURNAL_HEADERSRowChangeEvent(((GL_JOURNAL_HEADERSRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGL_JOURNAL_HEADERSRow(GL_JOURNAL_HEADERSRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GL_JOURNAL_HEADERSRow : DataRow {
            
            private GL_JOURNAL_HEADERSDataTable tableGL_JOURNAL_HEADERS;
            
            internal GL_JOURNAL_HEADERSRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGL_JOURNAL_HEADERS = ((GL_JOURNAL_HEADERSDataTable)(this.Table));
            }
            
            public int JOURNAL_ID {
                get {
                    return ((int)(this[this.tableGL_JOURNAL_HEADERS.JOURNAL_IDColumn]));
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.JOURNAL_IDColumn] = value;
                }
            }
            
            public int JOURNAL_NUMBER {
                get {
                    return ((int)(this[this.tableGL_JOURNAL_HEADERS.JOURNAL_NUMBERColumn]));
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.JOURNAL_NUMBERColumn] = value;
                }
            }
            
            public int GL_YEAR {
                get {
                    return ((int)(this[this.tableGL_JOURNAL_HEADERS.GL_YEARColumn]));
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.GL_YEARColumn] = value;
                }
            }
            
            public int PERIOD {
                get {
                    return ((int)(this[this.tableGL_JOURNAL_HEADERS.PERIODColumn]));
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.PERIODColumn] = value;
                }
            }
            
            public string MODULE {
                get {
                    return ((string)(this[this.tableGL_JOURNAL_HEADERS.MODULEColumn]));
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.MODULEColumn] = value;
                }
            }
            
            public string TYPE {
                get {
                    return ((string)(this[this.tableGL_JOURNAL_HEADERS.TYPEColumn]));
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.TYPEColumn] = value;
                }
            }
            
            public System.DateTime TRANSACTION_DATE {
                get {
                    return ((System.DateTime)(this[this.tableGL_JOURNAL_HEADERS.TRANSACTION_DATEColumn]));
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.TRANSACTION_DATEColumn] = value;
                }
            }
            
            public string REFERENCE {
                get {
                    try {
                        return ((string)(this[this.tableGL_JOURNAL_HEADERS.REFERENCEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.REFERENCEColumn] = value;
                }
            }
            
            public System.Decimal TOTAL_DEBITS {
                get {
                    return ((System.Decimal)(this[this.tableGL_JOURNAL_HEADERS.TOTAL_DEBITSColumn]));
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.TOTAL_DEBITSColumn] = value;
                }
            }
            
            public System.Decimal TOTAL_CREDITS {
                get {
                    return ((System.Decimal)(this[this.tableGL_JOURNAL_HEADERS.TOTAL_CREDITSColumn]));
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.TOTAL_CREDITSColumn] = value;
                }
            }
            
            public string PRINTED {
                get {
                    return ((string)(this[this.tableGL_JOURNAL_HEADERS.PRINTEDColumn]));
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.PRINTEDColumn] = value;
                }
            }
            
            public string REVERSED {
                get {
                    return ((string)(this[this.tableGL_JOURNAL_HEADERS.REVERSEDColumn]));
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.REVERSEDColumn] = value;
                }
            }
            
            public string CREATED_BY {
                get {
                    return ((string)(this[this.tableGL_JOURNAL_HEADERS.CREATED_BYColumn]));
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.CREATED_BYColumn] = value;
                }
            }
            
            public string STATUS {
                get {
                    return ((string)(this[this.tableGL_JOURNAL_HEADERS.STATUSColumn]));
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.STATUSColumn] = value;
                }
            }
            
            public int NEXT_LINE_NUMBER {
                get {
                    return ((int)(this[this.tableGL_JOURNAL_HEADERS.NEXT_LINE_NUMBERColumn]));
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.NEXT_LINE_NUMBERColumn] = value;
                }
            }
            
            public string OPERATOR {
                get {
                    try {
                        return ((string)(this[this.tableGL_JOURNAL_HEADERS.OPERATORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.OPERATORColumn] = value;
                }
            }
            
            public System.DateTime DATE_SAVED {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableGL_JOURNAL_HEADERS.DATE_SAVEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.DATE_SAVEDColumn] = value;
                }
            }
            
            public int EXPIRE_PERIOD {
                get {
                    try {
                        return ((int)(this[this.tableGL_JOURNAL_HEADERS.EXPIRE_PERIODColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.EXPIRE_PERIODColumn] = value;
                }
            }
            
            public int EXPIRE_YEAR {
                get {
                    try {
                        return ((int)(this[this.tableGL_JOURNAL_HEADERS.EXPIRE_YEARColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.EXPIRE_YEARColumn] = value;
                }
            }
            
            public string F9_UPDATED {
                get {
                    try {
                        return ((string)(this[this.tableGL_JOURNAL_HEADERS.F9_UPDATEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGL_JOURNAL_HEADERS.F9_UPDATEDColumn] = value;
                }
            }
            
            public bool IsREFERENCENull() {
                return this.IsNull(this.tableGL_JOURNAL_HEADERS.REFERENCEColumn);
            }
            
            public void SetREFERENCENull() {
                this[this.tableGL_JOURNAL_HEADERS.REFERENCEColumn] = System.Convert.DBNull;
            }
            
            public bool IsOPERATORNull() {
                return this.IsNull(this.tableGL_JOURNAL_HEADERS.OPERATORColumn);
            }
            
            public void SetOPERATORNull() {
                this[this.tableGL_JOURNAL_HEADERS.OPERATORColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATE_SAVEDNull() {
                return this.IsNull(this.tableGL_JOURNAL_HEADERS.DATE_SAVEDColumn);
            }
            
            public void SetDATE_SAVEDNull() {
                this[this.tableGL_JOURNAL_HEADERS.DATE_SAVEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEXPIRE_PERIODNull() {
                return this.IsNull(this.tableGL_JOURNAL_HEADERS.EXPIRE_PERIODColumn);
            }
            
            public void SetEXPIRE_PERIODNull() {
                this[this.tableGL_JOURNAL_HEADERS.EXPIRE_PERIODColumn] = System.Convert.DBNull;
            }
            
            public bool IsEXPIRE_YEARNull() {
                return this.IsNull(this.tableGL_JOURNAL_HEADERS.EXPIRE_YEARColumn);
            }
            
            public void SetEXPIRE_YEARNull() {
                this[this.tableGL_JOURNAL_HEADERS.EXPIRE_YEARColumn] = System.Convert.DBNull;
            }
            
            public bool IsF9_UPDATEDNull() {
                return this.IsNull(this.tableGL_JOURNAL_HEADERS.F9_UPDATEDColumn);
            }
            
            public void SetF9_UPDATEDNull() {
                this[this.tableGL_JOURNAL_HEADERS.F9_UPDATEDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GL_JOURNAL_HEADERSRowChangeEvent : EventArgs {
            
            private GL_JOURNAL_HEADERSRow eventRow;
            
            private DataRowAction eventAction;
            
            public GL_JOURNAL_HEADERSRowChangeEvent(GL_JOURNAL_HEADERSRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GL_JOURNAL_HEADERSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
